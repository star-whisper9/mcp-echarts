import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as a,o as t}from"./app-B7_Gp0mk.js";const n={};function r(l,s){return t(),e("div",null,s[0]||(s[0]=[a(`<h1 id="multi-user" tabindex="-1"><a class="header-anchor" href="#multi-user"><span>Multi-User</span></a></h1><p>In addition to providing local single-user service via <code>stdio</code> transport, you can also deploy it as an HTTP service supporting multiple users. Currently, two transports are supported: <code>Streamable HTTP</code> and <em><code>SSE</code> (deprecated)</em>.</p><h2 id="streamable-http" tabindex="-1"><a class="header-anchor" href="#streamable-http"><span>Streamable HTTP</span></a></h2><p>Streamable HTTP is the recommended HTTP transport for the MCP protocol, replacing the previous SSE (Server-Sent Events) transport. You can also use <code>npx</code> to deploy this package as an HTTP transport, just configure the following:</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 示例以 yaml 作为示例</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Example using yaml as a sample</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  transport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">http</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12345</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">127.0.0.1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  resourcePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/Path/To/ResourceDir</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  geoJsonPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/Path/To/GeoJsonDir</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The key configuration here is <code>transport</code>. For other configurations, see <a href="./config">Configuration</a>.</p><h2 id="sse" tabindex="-1"><a class="header-anchor" href="#sse"><span>SSE</span></a></h2><p>To maintain compatibility with legacy clients, a basic SSE server implementation is retained. <strong>If your client supports it, you should prefer Streamable HTTP transport.</strong></p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  transport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sse</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12345</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">127.0.0.1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  resourcePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/Path/To/ResourceDir</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  geoJsonPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/Path/To/GeoJsonDir</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="security-recommendations" tabindex="-1"><a class="header-anchor" href="#security-recommendations"><span>Security Recommendations</span></a></h2><ul><li>Avoid listening on <code>0.0.0.0</code>.</li><li>In production environments, it is recommended to use HTTPS transport.</li><li>Properly configure CORS rules to avoid unnecessary cross-origin requests.</li><li><em>For public services, implement authentication yourself to prevent unauthorized access.</em></li></ul><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>In the client, create an MCP service with the deployed transport type, and set the URL to the service&#39;s exposed URL.</p>`,13)]))}const o=i(n,[["render",r]]),d=JSON.parse('{"path":"/en/guide/multi-user.html","title":"Multi-User","lang":"en-US","frontmatter":{"title":"Multi-User","icon":"flowbite:users-outline","order":2,"footer":"Translated by GPT-4.1","description":"Multi-User In addition to providing local single-user service via stdio transport, you can also deploy it as an HTTP service supporting multiple users. Currently, two transports...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Multi-User\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T10:04:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"starwhisper9\\",\\"url\\":\\"https://github.com/star-whisper9\\"}]}"],["meta",{"property":"og:url","content":"https://star-whisper9.github.io/mcp-echarts/en/guide/multi-user.html"}],["meta",{"property":"og:site_name","content":"MCP-ECharts Docs"}],["meta",{"property":"og:title","content":"Multi-User"}],["meta",{"property":"og:description","content":"Multi-User In addition to providing local single-user service via stdio transport, you can also deploy it as an HTTP service supporting multiple users. Currently, two transports..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-07T10:04:55.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T10:04:55.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://star-whisper9.github.io/mcp-echarts/guide/multi-user.html"}]]},"git":{"createdTime":1751882695000,"updatedTime":1751882695000,"contributors":[{"name":"starwhisper9","username":"starwhisper9","email":"star@sotis.space","commits":1,"url":"https://github.com/starwhisper9"}]},"readingTime":{"minutes":0.76,"words":228},"filePathRelative":"en/guide/multi-user.md","autoDesc":true}');export{o as comp,d as data};
