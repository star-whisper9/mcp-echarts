import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as e,o as a}from"./app-VvJckTJF.js";const n={};function o(l,i){return a(),t("div",null,i[0]||(i[0]=[e(`<h1 id="logging-output" tabindex="-1"><a class="header-anchor" href="#logging-output"><span>Logging Output</span></a></h1><h2 id="logging-module" tabindex="-1"><a class="header-anchor" href="#logging-module"><span>Logging Module</span></a></h2><p>In version <code>1.2.0</code>, we refactored the project&#39;s logging module and chose <code>log4js</code> as the project&#39;s logging module, implementing a simple wrapper at <code>utils/log.ts</code>.</p><p>This wrapper exports an <code>initLogger()</code> method, which is called in the main module to initialize the logging system. It then exports a singleton <code>log</code> object, which you should use for logging output.</p><p>Example code:</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-typescript"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;@/utils/log.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 随后直接像你自己使用 log4js 一样使用 log 对象即可</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// Then you can use the log object just like you would use log4js</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;这是一个调试日志&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// This is a debug log</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">info</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;这是一个信息日志&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// This is an info log</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">warn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;这是一个警告日志&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// This is a warning log</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;这是一个错误日志&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// This is an error log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="logs-in-stdio" tabindex="-1"><a class="header-anchor" href="#logs-in-stdio"><span>Logs in STDIO</span></a></h3><p>Due to the nature of STDIO transport, developers should not output any STDOUT logs in an MCP service that transports via STDIO (STDOUT is used for transport messages). <strong>We follow this convention, and you should also adhere to it during development.</strong></p><p>In short: <strong>Do not output any information to STDOUT in code running in STDIO mode. If necessary, use STDERR.</strong></p><h3 id="default-behavior" tabindex="-1"><a class="header-anchor" href="#default-behavior"><span>Default Behavior</span></a></h3><p>In our logging wrapper, the service mode is detected and <strong>STDIO and file appenders</strong> are configured. By default, logs follow these output rules:</p><ul><li>File log level: <code>WARN</code></li><li>STDIO log level: <code>INFO</code></li></ul><table><thead><tr><th>Transport Mode</th><th>Enabled Appenders</th></tr></thead><tbody><tr><td>STDIO</td><td>File only</td></tr><tr><td>Other Modes</td><td>File and STDIO</td></tr></tbody></table><p>You can override the log levels in the application configuration, but <strong>you cannot enable the STDIO appender in STDIO mode</strong>. (If you must do so, you need to modify the code in <code>utils/log.ts</code>.)</p><h3 id="log-file-location" tabindex="-1"><a class="header-anchor" href="#log-file-location"><span>Log File Location</span></a></h3><p>Log files are stored in different locations depending on the operating system. We do not provide a configuration option for this; you need to modify the TypeScript source code.</p><ul><li>Windows: <code>%LOCALAPPDATA%/mcp-echarts/logs</code> or <code>os.homedir()/mcp-echarts/logs</code></li><li>macOS: <code>os.homedir()/Library/Logs/mcp-echarts</code></li><li>Linux: <code>os.homedir()/.mcp-echarts/logs</code></li></ul>`,17)]))}const p=s(n,[["render",o]]),d=JSON.parse(`{"path":"/en/docs/logging.html","title":"Logging Output","lang":"en-US","frontmatter":{"title":"Logging Output","icon":"ix:log","order":3,"footer":"Translated by GPT-4.1","description":"Logging Output Logging Module In version 1.2.0, we refactored the project's logging module and chose log4js as the project's logging module, implementing a simple wrapper at uti...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Logging Output\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-10T02:54:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"starwhisper9\\",\\"url\\":\\"https://github.com/star-whisper9\\"}]}"],["meta",{"property":"og:url","content":"https://star-whisper9.github.io/mcp-echarts/en/docs/logging.html"}],["meta",{"property":"og:site_name","content":"MCP-ECharts Docs"}],["meta",{"property":"og:title","content":"Logging Output"}],["meta",{"property":"og:description","content":"Logging Output Logging Module In version 1.2.0, we refactored the project's logging module and chose log4js as the project's logging module, implementing a simple wrapper at uti..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-10T02:54:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-10T02:54:00.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://star-whisper9.github.io/mcp-echarts/docs/logging.html"}]]},"git":{"createdTime":1752116040000,"updatedTime":1752116040000,"contributors":[{"name":"starwhisper9","username":"starwhisper9","email":"star@sotis.space","commits":1,"url":"https://github.com/starwhisper9"}]},"readingTime":{"minutes":1.23,"words":369},"filePathRelative":"en/docs/logging.md","autoDesc":true}`);export{p as comp,d as data};
