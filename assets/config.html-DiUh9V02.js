import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as i,o as a}from"./app-D6Au6iTs.js";const d={};function n(r,t){return a(),e("div",null,t[0]||(t[0]=[i(`<h1 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h1><p>你可以通过两种方式配置 ECharts 服务，二者的功能相同但键名略有不同。</p><ul><li><strong>(推荐)</strong> <a href="#yaml">YAML 文件</a></li><li><a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0">命令行参数</a></li></ul><h2 id="yaml" tabindex="-1"><a class="header-anchor" href="#yaml"><span>YAML</span></a></h2><p>YAML 文件对配置的管理更集中，可读性优良。</p><p>你可以在任意位置创建服务的 YAML 配置，随后使用 <code>--config-path</code> 命令行参数传入配置文件路径（<strong>必要</strong>）。</p><h3 id="示例配置" tabindex="-1"><a class="header-anchor" href="#示例配置"><span>示例配置</span></a></h3><p>示例的 YAML 配置如下 <em>(你也可以在源码的 <code>config.yaml.example</code> 获得)</em>：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># MCP 服务器块</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">server</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  transport</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">http</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">12345</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  cors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;*&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 资源相关块</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  resourcePath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/Path/To/ResourceDir</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">11223</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  baseUrl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">http://localhost:11223</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  geoJsonPath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/Path/To/GeoJsonDir</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="可用项" tabindex="-1"><a class="header-anchor" href="#可用项"><span>可用项</span></a></h3><ul><li><code>server</code> 块</li></ul><table><thead><tr><th>键</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>transport</code></td><td>传输协议，支持 <code>http</code> 和 <code>stdio</code><em>(或已弃用的 <code>sse</code>)</em></td><td><code>stdio</code></td></tr><tr><td><code>port</code></td><td>端口号，MCP 服务监听的端口</td><td><code>1122</code></td></tr><tr><td><code>host</code></td><td>主机地址，MCP 服务监听的主机地址</td><td><code>127.0.0.1</code></td></tr><tr><td><code>cors</code></td><td>CORS 允许的来源列表，支持通配符 <code>*</code>。允许传入列表 / 字符串（指向一个按行分隔的，存储允许的域的文本文件）</td><td>空列表</td></tr></tbody></table><ul><li><code>resource</code> 块</li></ul><table><thead><tr><th>键</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>resourcePath</code></td><td>生成的图表图片存储目录的绝对路径</td><td><code>./static</code></td></tr><tr><td><code>enabled</code></td><td>是否启用内置 HTTP 静态托管服务</td><td><code>true</code></td></tr><tr><td><code>port</code></td><td>内置 HTTP 静态托管服务的端口号</td><td><code>1123</code></td></tr><tr><td><code>host</code></td><td>内置 HTTP 静态托管服务的主机地址</td><td><code>127.0.0.1</code></td></tr><tr><td><code>baseUrl</code></td><td>内置 HTTP 静态托管服务的基础 URL</td><td><code>http://127.0.0.1:1123</code></td></tr><tr><td><code>geoJsonPath</code></td><td>GeoJSON 文件的目录路径</td><td><code>./geojson</code></td></tr></tbody></table><h2 id="命令行参数" tabindex="-1"><a class="header-anchor" href="#命令行参数"><span>命令行参数</span></a></h2><p>你也可以通过命令行参数来配置 ECharts 服务，此处仅给出参数与 YAML 文件键的对应关系。</p><table><thead><tr><th>参数</th><th>YAML 路径</th></tr></thead><tbody><tr><td><code>--transport</code></td><td><code>server.transport</code></td></tr><tr><td><code>--mcp-port</code></td><td><code>server.port</code></td></tr><tr><td><code>--mcp-host</code></td><td><code>server.host</code></td></tr><tr><td><code>--cors</code></td><td><code>server.cors</code></td></tr><tr><td><code>--res-path</code></td><td><code>resource.resourcePath</code></td></tr><tr><td><code>--res-enabled</code></td><td><code>resource.enabled</code></td></tr><tr><td><code>--res-port</code></td><td><code>resource.port</code></td></tr><tr><td><code>--res-host</code></td><td><code>resource.host</code></td></tr><tr><td><code>--res-base-url</code></td><td><code>resource.baseUrl</code></td></tr><tr><td><code>--geojson-path</code></td><td><code>resource.geoJsonPath</code></td></tr></tbody></table>`,17)]))}const l=s(d,[["render",n]]),c=JSON.parse('{"path":"/guide/config.html","title":"配置","lang":"zh-CN","frontmatter":{"title":"配置","icon":"solar:settings-bold-duotone","order":3,"description":"配置 你可以通过两种方式配置 ECharts 服务，二者的功能相同但键名略有不同。 (推荐) YAML 文件 命令行参数 YAML YAML 文件对配置的管理更集中，可读性优良。 你可以在任意位置创建服务的 YAML 配置，随后使用 --config-path 命令行参数传入配置文件路径（必要）。 示例配置 示例的 YAML 配置如下 (你也可以在源码...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"配置\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T10:04:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"starwhisper9\\",\\"url\\":\\"https://github.com/star-whisper9\\"}]}"],["meta",{"property":"og:url","content":"https://star-whisper9.github.io/mcp-echarts/guide/config.html"}],["meta",{"property":"og:site_name","content":"MCP-ECharts 文档"}],["meta",{"property":"og:title","content":"配置"}],["meta",{"property":"og:description","content":"配置 你可以通过两种方式配置 ECharts 服务，二者的功能相同但键名略有不同。 (推荐) YAML 文件 命令行参数 YAML YAML 文件对配置的管理更集中，可读性优良。 你可以在任意位置创建服务的 YAML 配置，随后使用 --config-path 命令行参数传入配置文件路径（必要）。 示例配置 示例的 YAML 配置如下 (你也可以在源码..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-07-07T10:04:55.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T10:04:55.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://star-whisper9.github.io/mcp-echarts/en/guide/config.html"}]]},"git":{"createdTime":1751882695000,"updatedTime":1751882695000,"contributors":[{"name":"starwhisper9","username":"starwhisper9","email":"star@sotis.space","commits":1,"url":"https://github.com/starwhisper9"}]},"readingTime":{"minutes":1.49,"words":448},"filePathRelative":"guide/config.md","autoDesc":true}');export{l as comp,c as data};
